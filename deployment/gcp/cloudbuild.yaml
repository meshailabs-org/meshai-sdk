# Cloud Build configuration for MeshAI SDK
# Comprehensive CI/CD pipeline with testing, building, and deployment

steps:
  # Install dependencies and run tests
  - name: 'python:3.11'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install -e ".[dev,all]"
        echo "Running code quality checks..."
        black --check src/ tests/ scripts/ || exit 1
        isort --check-only src/ tests/ scripts/ || exit 1
        flake8 src/ tests/ scripts/ --max-line-length=88 --extend-ignore=E203,W503 || exit 1
        echo "Running unit tests..."
        pytest tests/ -v --maxfail=5 -x || exit 1
        echo "All tests passed!"
    id: 'test'

  # Security scanning
  - name: 'python:3.11'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install bandit[toml] safety
        echo "Running security scans..."
        bandit -r src/ -ll || true
        safety check || true
    id: 'security'

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/meshai-sdk:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/meshai-sdk:latest'
      - '-f'
      - 'Dockerfile'
      - '.'
    waitFor: ['test', 'security']

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/meshai-sdk:$BUILD_ID'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/meshai-sdk:latest'

  # Deploy Registry Service to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'meshai-registry'
      - '--image=gcr.io/$PROJECT_ID/meshai-sdk:$BUILD_ID'
      - '--region=$_DEPLOY_REGION'
      - '--platform=managed'
      - '--port=8080'
      - '--memory=512Mi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--timeout=300'
      - '--concurrency=80'
      - '--set-env-vars=SERVICE_TYPE=registry,MESHAI_LOG_LEVEL=info,ENVIRONMENT=production'
      - '--set-env-vars=MESHAI_DATABASE_URL=$$DATABASE_URL,MESHAI_REDIS_URL=$$REDIS_URL'
      - '--vpc-connector=projects/$PROJECT_ID/locations/$_DEPLOY_REGION/connectors/meshai-connector'
      - '--allow-unauthenticated'
    secretEnv: ['DATABASE_URL', 'REDIS_URL']

  # Deploy Runtime Service to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'meshai-runtime'
      - '--image=gcr.io/$PROJECT_ID/meshai-sdk:$BUILD_ID'
      - '--region=$_DEPLOY_REGION'
      - '--platform=managed'
      - '--port=8080'
      - '--memory=512Mi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--timeout=300'
      - '--concurrency=80'
      - '--set-env-vars=SERVICE_TYPE=runtime,MESHAI_LOG_LEVEL=info,ENVIRONMENT=production'
      - '--set-env-vars=MESHAI_DATABASE_URL=$$DATABASE_URL,MESHAI_REDIS_URL=$$REDIS_URL,MESHAI_REGISTRY_URL=https://api.meshai.dev'
      - '--vpc-connector=projects/$PROJECT_ID/locations/$_DEPLOY_REGION/connectors/meshai-connector'
      - '--allow-unauthenticated'
    secretEnv: ['DATABASE_URL', 'REDIS_URL']

  # Run post-deployment integration tests
  - name: 'python:3.11'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install -e ".[all]"
        echo "Waiting for services to be ready..."
        sleep 60
        echo "Running post-deployment health checks..."
        python scripts/integration-test.py || exit 1
        echo "Integration tests passed!"
    env:
      - 'MESHAI_REGISTRY_URL=https://api.meshai.dev'
      - 'MESHAI_RUNTIME_URL=https://api.meshai.dev'

# Secret configuration
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/database-url/versions/latest
      env: 'DATABASE_URL'
    - versionName: projects/$PROJECT_ID/secrets/redis-url/versions/latest
      env: 'REDIS_URL'

# Images to push to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/meshai-sdk:$BUILD_ID'

# Build timeout
timeout: '1200s'

options:
  # Use higher CPU for faster builds
  machineType: 'N1_HIGHCPU_8'
  
# Substitutions for environment-specific deployments
substitutions:
  _DEPLOY_REGION: 'us-central1'
  _SERVICE_ACCOUNT: 'meshai-service@$PROJECT_ID.iam.gserviceaccount.com'